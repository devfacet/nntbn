name: Test

on:
  push:
    branches:
      - main
    tags-ignore: ["*"]
  pull_request:
    branches: ["*"]

  workflow_dispatch:
    inputs:
      logLevel:
        description: Log Level
        default: info
        type: choice
        options:
          - debug
          - error
          - fatal
          - info
          - panic
          - warning
      environment:
        description: Environment
        default: test

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            dockerfile: Dockerfile.generic
            tag: nntbn:amd64
            test: generic

          - platform: linux/arm64
            dockerfile: Dockerfile.arm-neon
            tag: nntbn:arm64
            test: arm-neon

          - platform: linux/arm64
            dockerfile: Dockerfile.arm-cmsis-dsp
            tag: nntbn:arm64
            test: arm-cmsis-dsp

          - platform: linux/arm/v8
            dockerfile: Dockerfile.armv8-neon
            tag: nntbn:armv8-neon
            test: arm-neon

          - platform: linux/arm/v7
            dockerfile: Dockerfile.armv7-neon
            tag: nntbn:armv7-neon
            test: arm-neon

    steps:
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3.0.0
        with:
          platforms: all

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.2.0

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout submodules
        run: git submodule update --init

      - name: Create Buildx
        run: |
          docker buildx create --name tests --use
          docker buildx inspect --bootstrap

      - name: Build and Run Test
        run: |
          docker buildx build --platform ${{ matrix.platform }} -f scripts/docker/${{ matrix.dockerfile }} -t ${{ matrix.tag }} . --load
          if [ "${{ matrix.test }}" == "arm-neon" ]; then
            TESTS=arch/arm/neon/dot_product_perf,arch/arm/neon/neuron,arch/arm/neon/neuron_perf
          elif [ "${{ matrix.test }}" == "arm-cmsis-dsp" ]; then
            TESTS=arch/arm/cmsis-dsp/dot_product_perf,arch/arm/cmsis-dsp/neuron,arch/arm/cmsis-dsp/neuron_perf
          elif [ "${{ matrix.test }}" == "generic" ]; then
            TESTS=arch/generic/dot_product,arch/generic/dot_product_perf,arch/generic/layer,arch/generic/layer_multi,arch/generic/neuron,arch/generic/neuron_perf
          else
            echo "unknown test"
            exit 1
          fi
          IFS=',' read -ra TESTS <<< "$TESTS"
          for TEST in "${TESTS[@]}"; do
            echo running ${TEST}
            docker run --platform ${{ matrix.platform }} ${{ matrix.tag }} "/nn/build/tests/${TEST}"
          done
